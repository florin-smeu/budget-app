version: "3"

volumes:
  prometheus_data: {}

networks:
  webnet:

services:
  auth:
    image: florinsmeu/kubecaf-auth:0.1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "8886:5000"
    networks:
      - webnet

  backend:
    image: florinsmeu/kubecaf-backend:0.1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "8888:5000"
    networks:
      - webnet

  frontend:
    image: florinsmeu/kubecaf-frontend:0.1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "8889:80"
    networks:
      - webnet

  db:
    image: florinsmeu/kubecaf-db:0.1
    ports:
      - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  node:
    image: prom/node-exporter:v0.18.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - webnet

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - webnet 
